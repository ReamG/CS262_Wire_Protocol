# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import schema_pb2 as schema__pb2


class ChatHandlerStub(object):
    """The main service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/chat.ChatHandler/Create',
                request_serializer=schema__pb2.Credentials.SerializeToString,
                response_deserializer=schema__pb2.BasicResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/chat.ChatHandler/Login',
                request_serializer=schema__pb2.Credentials.SerializeToString,
                response_deserializer=schema__pb2.BasicResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/chat.ChatHandler/Delete',
                request_serializer=schema__pb2.BlankRequest.SerializeToString,
                response_deserializer=schema__pb2.BasicResponse.FromString,
                )
        self.Send = channel.unary_unary(
                '/chat.ChatHandler/Send',
                request_serializer=schema__pb2.SendRequest.SerializeToString,
                response_deserializer=schema__pb2.BasicResponse.FromString,
                )
        self.Flush = channel.unary_unary(
                '/chat.ChatHandler/Flush',
                request_serializer=schema__pb2.BlankRequest.SerializeToString,
                response_deserializer=schema__pb2.FlushResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/chat.ChatHandler/List',
                request_serializer=schema__pb2.BlankRequest.SerializeToString,
                response_deserializer=schema__pb2.ListResponse.FromString,
                )


class ChatHandlerServicer(object):
    """The main service
    """

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Send(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=schema__pb2.Credentials.FromString,
                    response_serializer=schema__pb2.BasicResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=schema__pb2.Credentials.FromString,
                    response_serializer=schema__pb2.BasicResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=schema__pb2.BlankRequest.FromString,
                    response_serializer=schema__pb2.BasicResponse.SerializeToString,
            ),
            'Send': grpc.unary_unary_rpc_method_handler(
                    servicer.Send,
                    request_deserializer=schema__pb2.SendRequest.FromString,
                    response_serializer=schema__pb2.BasicResponse.SerializeToString,
            ),
            'Flush': grpc.unary_unary_rpc_method_handler(
                    servicer.Flush,
                    request_deserializer=schema__pb2.BlankRequest.FromString,
                    response_serializer=schema__pb2.FlushResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=schema__pb2.BlankRequest.FromString,
                    response_serializer=schema__pb2.ListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatHandler(object):
    """The main service
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatHandler/Create',
            schema__pb2.Credentials.SerializeToString,
            schema__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatHandler/Login',
            schema__pb2.Credentials.SerializeToString,
            schema__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatHandler/Delete',
            schema__pb2.BlankRequest.SerializeToString,
            schema__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatHandler/Send',
            schema__pb2.SendRequest.SerializeToString,
            schema__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Flush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatHandler/Flush',
            schema__pb2.BlankRequest.SerializeToString,
            schema__pb2.FlushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatHandler/List',
            schema__pb2.BlankRequest.SerializeToString,
            schema__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
